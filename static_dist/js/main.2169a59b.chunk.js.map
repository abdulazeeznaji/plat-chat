{"version":3,"sources":["serviceWorker.js","components/LoginForm.js","components/Header.js","App.js","components/SinglePost.js","components/Comments.js","components/Posts.js","components/CreatePost.js","components/Feed.js","routes.js","index.js"],"names":["Boolean","window","location","hostname","match","LoginForm","state","email","password","handle_change","event","setState","target","name","value","handle_login","e","data","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","localStorage","setItem","token","logged_in","username","history","push","Paper","style","alignText","padding","TextField","type","label","this","onChange","fullWidth","Button","color","marginLeft","marginRight","display","onClick","React","Component","useStyles","makeStyles","theme","root","flexGrow","menuButton","spacing","title","Header","props","classes","className","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","handle_logout","App","removeItem","posts","getItem","children","Panel","styled","div","Delete","DeleteIcon","SinglePost","open","post","deletePost","Grid","container","margin","item","xs","sm","md","fontSize","nativeColor","red","id","CommentBasePanel","CommentText","CommentBase","comment","handleDelete","anchorEl","handleClick","handleClose","handleEdit","float","cursor","RenderComments","comments","map","key","Comments","currentTarget","onSubmit","comment_id","handleChange","text","resetTextField","post_id","noValidate","autoComplete","placeholder","InputProps","endAdornment","InputAdornment","length","Posts","console","log","Card","square","CreatePost","handleSubmit","obj","user","updatePosts","form","encType","FormControl","formControl","InputLabel","htmlFor","Input","disabled","button","withStyles","width","paddingTop","Feed","posts_id","Authorization","renderPosts","loadingFeed","finally","maxWidth","top","indigo","routes","browserHistory","path","component","Login","sessionStorage","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2169a59b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { browserHistory as history } from 'react-router';\n\n\nclass LoginForm extends React.Component {\n    state = {\n        email: '',\n        password: ''\n    };\n\n    handle_change = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n    };\n\n    handle_login = (e, data) => {\n        e.preventDefault();\n        fetch(' http://127.0.0.1:8000/token-auth/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then(json => {\n                localStorage.setItem('token', json.token);\n                this.setState({\n                    logged_in: true,\n                    username: json.token\n                });\n            });\n                history.push(`/feed`);\n\n    };\n\n    render() {\n        return (\n            <Paper style={{alignText: 'center', padding:'2em'}}>\n                <TextField\n                    type=\"text\"\n                    label=\"email\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.handle_change}\n                    fullWidth={true}/>\n                <br/>\n                <TextField\n                    type=\"password\"\n                    label=\"password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.handle_change}\n                    fullWidth={true} />\n                <br/>\n                <div>\n                    <Button color=\"primary\" style={{marginLeft: 'auto',marginRight: 'auto', display: 'block'}} onClick={e => this.handle_login(e, this.state)}>\n                        Login\n                    </Button>\n                </div>\n            </Paper>\n\n        );\n    }\n}\n\nexport default LoginForm;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { browserHistory as history } from 'react-router';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\n\nexport default function Header(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Plat-Chat\n                    </Typography>\n                    {props.logged_in ?\n                        <Button onClick={props.handle_logout} color=\"inherit\">Logout</Button>\n                        :  <div>\n                            <Button onClick={()=>{history.push('/login')}} color=\"inherit\">Login</Button>\n                            <Button onClick={()=>{history.push('/signup')}} color=\"inherit\">Signup</Button>\n                        </div>\n\n                    }\n                </Toolbar>\n            </AppBar>\n\n        </div>\n    );\n}\n","import React, {Component, Fragment} from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport { browserHistory as history } from 'react-router';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts:[],\n            logged_in: localStorage.getItem('token') ? true : false,\n\n        };\n    }\n\n    componentDidMount() {\n        // if (this.state.logged_in) {\n        //     fetch(' http://127.0.0.1:8000/users/current_user/', {\n        //         headers: {\n        //             Authorization: `JWT ${localStorage.getItem('token')}`\n        //         }\n        //     })\n        //         .then(res => res.json())\n        //         .then(json => {\n        //             this.setState({ username: json.username });\n        //         });\n        // }\n    }\n    handle_logout = () => {\n        localStorage.removeItem('token');\n        this.setState({ logged_in: false, username: '' });\n        history.push('/login');\n    };\n\n\n    // Render method\n    render() {\n        return (\n            <div className=\"App\">\n                <Header           logged_in={this.state.logged_in}\n                                  handle_logout={this.handle_logout}\n                />\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React, {Component, Fragment} from 'react';\nimport styled from 'styled-components';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport red from '@material-ui/core/colors/red';\n\n\n\n\nconst Panel = styled.div`\n\tmargin: 5px;\n`;\n\n\nconst Delete = styled(DeleteIcon)`\n\tposition: relative;\n\tcursor: pointer;\n\tright: 15px;\n\ttop: 9px;\n\tfloat:right;\n`;\n\nclass SinglePost extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {open: false}\n\t}\n\trender() {\n\t\tconst { post, deletePost } = this.props;\n\t\treturn(\n\t\t\t<Panel>\n\t\t\t\t<Grid container style={{margin: 10}}>\n\t\t\t\t\t<Grid item xs={10} sm={10} md={10}>\n\t\t\t\t\t\t<Typography style={{fontSize: 18}}>{post.body}</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={2} sm={2} md={2}>\n\t\t\t\t\t\t<Delete nativeColor={red[600]} onClick={() => deletePost(post.id)}/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nexport default SinglePost;","import React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/CheckCircle';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst Panel = styled.div`\n\tmargin: 5px;\n`;\n\nconst CommentBasePanel = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\tpadding: 10px 0;\n\tmargin: 10px 0;\n\tbackground-color: #f6f6f6;\n\tborder-radius: 5px;\n`;\n\nconst CommentText = styled(Typography)`\n\twidth: 95%;\n\tpadding: 8px 15px 5px 15px;\n\tflex: 1;\n`;\n\nconst CommentBase = ({comment, open, anchorEl, handleClick, handleClose, handleDelete, handleEdit}) => (\n\t<CommentBasePanel>\n\t\t<CommentText>\n\t\t\t{comment.body}\n\t\t\t<span style={{ float: 'right', fontSize: 10, color: '#A9A9A9' }}></span>\n\t\t</CommentText>\n\t\t<Typography style={{ padding: 10, cursor: 'pointer', display: 'inline-block' }} onClick={() => handleEdit(comment)}>\n\t\t\tEdit\n\t\t</Typography>\n\t\t<Typography style={{ padding: 10, color: red[500], cursor: 'pointer', display: 'inline-block' }} onClick={() => handleDelete(comment.id)}>\n\t\t\tDelete\n\t\t</Typography>\n\t</CommentBasePanel>\n);\n\nconst RenderComments = (props) => {\n\treturn props.comments.map(comment => {\n\t\treturn <CommentBase\n\t\t\tkey={comment.id}\n\t\t\tcomment={comment}\n\t\t\topen={props.open}\n\t\t\tanchorEl={props.anchorEl}\n\t\t\thandleClick={props.handleClick}\n\t\t\thandleClose={props.handleClose}\n\t\t\thandleDelete={props.handleDelete}\n\t\t\thandleEdit={props.handleEdit}\n\t\t/>\n\t});\n};\n\nclass Comments extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {anchorEl: null, comment: '', comment_id: null, comments: props.comments, post_id: props.post_id };\n\t}\n\n\thandleClick = (event) => {\n\t\tthis.setState({ anchorEl: event.currentTarget })\n\t};\n\n\thandleClose = () => {\n\t\tthis.setState({ anchorEl: null })\n\t};\n\n\tonSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tif(!this.state.comment) {\n\t\t\treturn;\n\t\t}\n\t\t// Edit comment\n\t\tif(!this.state.comment_id) {\n\n\t\t}\n\t\t// Create comment\n\t\telse {\n\n\t\t}\n\t};\n\n\thandleChange = (event) => {\n\t\tthis.setState({ comment: event.target.value });\n\t};\n\n\thandleEdit = (comment) => {\n\t\tthis.setState({ comment: comment.text, comment_id: comment.id })\n\t};\n\n\thandleDelete = (comment_id) => {\n\t};\n\n\tresetTextField = () => {\n\t\tthis.setState({ comment: '', comment_id: null });\n\t};\n\n\trender() {\n\n\t\tconst { anchorEl } = this.state;\n\t\tconst open = Boolean(anchorEl);\n\n\t\treturn(\n\t\t\t<Panel>\n\t\t\t\t<form noValidate autoComplete=\"off\" onSubmit={this.onSubmit}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid={`comment${this.state.post_id}`}\n\t\t\t\t\t\tname=\"comment\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tplaceholder=\"Comment here\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tvalue={this.state.comment}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\tendAdornment : (<Fragment>\n\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t\t<IconButton onClick={this.onSubmit} title=\"Save\">\n\t\t\t\t\t\t\t\t\t\t<SaveIcon/>\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t\t<IconButton onClick={this.resetTextField} title=\"Clear\">\n\t\t\t\t\t\t\t\t\t\t<CloseIcon/>\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t</Fragment>)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</form>\n\n\t\t\t\t{this.state.comments && this.state.comments.length > 0 &&\n\t\t\t\t<RenderComments\n\t\t\t\t\tcomments={this.state.comments}\n\t\t\t\t\topen={open}\n\t\t\t\t\tanchorEl={this.state.anchorEl}\n\t\t\t\t\thandleClick={this.handleClick}\n\t\t\t\t\thandleClose={this.handleClose}\n\t\t\t\t\thandleDelete={this.handleDelete}\n\t\t\t\t\thandleEdit={this.handleEdit}\n\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</Panel>\n\t\t)\n\t}\n\n}\n\n\nexport default Comments;","import React  from 'react';\nimport SinglePost from './SinglePost';\nimport Card from '@material-ui/core/Card';\nimport Comments from './Comments';\n\nconst Posts = ({ post, deletePost }) => {\n    console.log(post)\n    return (\n        <Card style={{ margin: '25px 0'}} square>\n            <SinglePost post={post} deletePost={deletePost} />\n            <Comments post_id={post.id} comments={post.comments} />\n        </Card>\n    );\n}\n\nexport default Posts;","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles/';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\n\nconst style = {\n\tform: {\n\t\twidth: '100%',\n\t\tmargin: '0 auto',\n\t\tdisplay: 'flex',\n\t\tpaddingTop: 20,\n\t},\n\tformControl : {\n\t\tmargin: '0 auto',\n\t\twidth: 500,\n\t},\n\tbutton: {\n\t\twidth: 200,\n\t\tmargin: '10px 0',\n\t}\n};\n\nclass CreatePost extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {post: ''};\n\t}\n\n\thandleChange = event => {\n\t\tthis.setState({post: event.target.value})\n\t};\n\n\thandleSubmit = event => {\n\t\tevent.preventDefault();\n\t\tlet obj = {\n\t\t\tbody: this.state.post,\n\t\t\tuser:1\n\t\t};\n\t\tfetch('http://127.0.0.1:8000/posts/', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(obj)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => {\n\t\t\t\tthis.setState({ post: ''});\n\t\t\t\tthis.props.updatePosts(json)\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit} className={classes.form} encType=\"multipart/form-data\">\n\t\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t\t<InputLabel htmlFor=\"new_post\">What's on your mind?</InputLabel>\n\t\t\t\t\t<Input type=\"text\" autoComplete=\"off\" id=\"text\" name=\"text\" value={this.state.post} onChange={this.handleChange}/>\n\t\t\t\t\t<Button type=\"submit\" disabled={!this.state.post} variant=\"outlined\" className={classes.button}>Create Post</Button>\n\t\t\t\t</FormControl>\n\t\t\t</form>\n\t\t);\n\t}\n\n}\n\nexport default withStyles(style)(CreatePost);","import React, { Component } from 'react';\nimport Posts from './Posts';\nimport CreatePost from './CreatePost';\nimport Typography from '@material-ui/core/Typography';\nimport Error from '@material-ui/icons/Error';\nimport indigo from '@material-ui/core/colors/indigo';\n\nclass Feed extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { posts: [], loadingFeed: true };\n    }\n\n    componentDidMount() {\n        fetch(' http://127.0.0.1:8000/posts/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `JWT ${localStorage.getItem('token')}`\n\n            },\n            body: JSON.stringify()\n        })\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    posts:json\n                });\n            })\t\t\t.finally(() => this.setState({ loadingFeed: false }));\n\n    }\n\n    deletePost = (posts_id) => {\n        fetch(' http://127.0.0.1:8000/posts/' + posts_id, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `JWT ${localStorage.getItem('token')}`\n\n            },\n        })\n            .then(res => res.json())\n            .then(json => {\n                this.setState({posts: json})\n            })\n    };\n\n    updatePosts = (posts) => {\n\n        this.setState({ posts });\n    };\n\n    renderPosts = (posts) => posts.map(post => <Posts post={post} deletePost={this.deletePost}  />);\n\n\n    render() {\n        return (\n            <div style={{ padding: 10 }}>\n                <CreatePost updatePosts={this.updatePosts}/>\n                <div style={{ maxWidth: '500px', margin: '0 auto', paddingTop: '20px'}}>\n                    {this.state.loadingFeed\n                        ? <Typography variant=\"headline\">Loading posts...</Typography>\n                        : this.state.posts.length\n                            ? this.renderPosts(this.state.posts)\n                            : <Typography variant=\"headline\">\n                                <Error style={{ position: 'relative', top: '3px' }} nativeColor={indigo[500]}/>\n                                &nbsp;&nbsp;No Posts Yet.\n                            </Typography>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Feed;","import React from 'react';\nimport { Router, Route, IndexRoute, browserHistory } from 'react-router';\nimport Login from './components/LoginForm';\nimport App from './App';\nimport Feed from './components/Feed';\nimport requireAuthentication from './utils/requireAuthentication';\n\n\nconst routes = (\n    <Router history={browserHistory}>\n        <Route path=\"/\" component={App}>\n            <IndexRoute component={Feed}/>\n        </Route>\n        <Route path=\"login\" component={Login}/>\n\n\n    </Router>\n);\n\nexport default routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport routes from './routes';\n\nconst token = sessionStorage.getItem('token');\nif (token !== null) {\n    // store.dispatch(authLoginUserSuccess(token));\n}\n\nReactDOM.render(\n  <React.StrictMode>\n      {routes}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}